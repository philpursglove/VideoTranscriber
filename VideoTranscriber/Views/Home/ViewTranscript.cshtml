@model VideoTranscriber.ViewModels.ViewTranscriptViewModel
@{
    ViewData["Title"] = "View Transcript";
}

<div class="text-center">
    <h3 class="display-4">Transcript for @Model.Filename</h3>
</div>

<div class="nav">
    <li class="nav-item">
        <div class="dropdown">
            <a class="dropdown-toggle nav-link" data-bs-toggle="dropdown">Download</a>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item" href="@Url.Action("DownloadWord", "Home", new { videoId = Model.VideoId, includeTimestamps=false })">Word</a></li>
                <li><a class="dropdown-item" href="@Url.Action("DownloadWord", "Home", new { videoId = Model.VideoId, includeTimestamps=true })">Word (with timestamps)</a></li>
                <li><hr class="dropdown-divider"></li>
                <li><a class="dropdown-item" href="@Url.Action("DownloadTranscript", "Home", new { videoId = Model.VideoId })">CSV</a></li>
            </ul>
        </div>

    </li>
    <li class="nav-item">
        @Html.ActionLink("Edit Speakers", "EditSpeakers", new { videoId = Model.VideoId }, new {@class="nav-link"})
    </li>
    <li class="nav-item">
        @Html.ActionLink("Edit Security", "EditSecurity", new { videoId = Model.VideoId }, new { @class = "nav-link" })
    </li>
</div>
<div>
    Language: @Model.Language
</div>
<div>
    Keywords: @string.Join(", ", Model.Keywords)
</div>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Start Time</th>
            <th>Speaker</th>
            <th></th>
            <th>Confidence</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var element in Model.Transcript.OrderBy(t => t.Id))
        {
            <tr>
                <td>@element.StartTimeIndex</td>
                <td>@Model.Speakers.First(s => s.Id == element.SpeakerId).Name</td>
                <td>@element.Text</td>
                <td>@element.Confidence</td>
            </tr>
        }
    </tbody>
</table>